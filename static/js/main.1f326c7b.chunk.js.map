{"version":3,"sources":["components/task01.js","components/task02.js","components/task03.js","components/person.js","components/task04.js","components/task05.js","components/animals.js","components/task06.js","components/task07.js","components/task08.js","components/task10.js","components/people.js","components/task11.js","components/home.js","App.js","serviceWorker.js","index.js"],"names":["Task01","Component","Task02","num1","parseFloat","prompt","num2","Task03","year","currentYear","Date","getFullYear","Task04","Person","Task05","jsx","operation","Task06","animals","length","map","el","ind","key","Task07","genNumber","Math","round","random","style","background","Task08","color","indexOf","toLowerCase","width","height","border","Task10","person","id","title","name","surname","pesel","bio","avatar","Task11","people","p","Home","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1f326c7b.chunk.js","sourcesContent":["import React, {Component} from \"react\";\n\n\nclass Task01 extends Component {\n\n    render() {\n        let name = 'widzu';\n\n        return (\n            <p>Witaj na stronie w oparciu o React, {name} :)</p>\n        )\n    }\n}\n\nexport default Task01;","import React, {Component} from \"react\";\n\n\nclass Task02 extends Component {\n\n    render() {\n        let num1 = parseFloat(prompt('Wprowadź pierwszą dowolną liczbę (zad.2)'));\n        let num2 = parseFloat(prompt('Wprowadź drugą dowolną liczbę (zad.2)'));\n\n        return (\n\n                <div>{num1} + {num2} = {num1 + num2}</div>\n\n        )\n    }\n}\n\nexport default Task02;","import React, {Component} from \"react\";\n\nclass Task03 extends Component {\n\n    render() {\n        let year = parseFloat(prompt('Twój rok urodzenia, to?'));\n        let currentYear = new Date().getFullYear();\n\n        return (\n            <h1>Doświadczyłeś użytkowniku, już {currentYear - year} lat życia :) </h1>\n        )\n    }\n}\n\nexport default Task03;","export default {\n    title: \"Mr.\",\n    name: \"Albin\",\n    surname: \"Kolano\",\n    age: 56\n};","import React, {Component} from \"react\";\nimport Person from './person';\n\nclass Task04 extends Component {\n\n    render() {\n        return (\n            <>\n                <div>Wywołana postać, to:</div>\n                <ul>\n                    <li>{Person.title}</li>\n                    <li>{Person.name}</li>\n                    <li>{Person.surname}</li>\n                    <li>{Person.age}</li>\n                </ul>\n            </>\n        )\n    }\n}\n\nexport default Task04;","import React, {Component} from \"react\";\n\n\nclass Task05 extends Component {\n\n    render() {\n        let num1 = parseFloat(prompt('Wprowadź pierwszą dowolną liczbę (zad.5)'));\n        let num2 = parseFloat(prompt('Wprowadź drugą dowolną liczbę (zad.5)'));\n        let operation = prompt('Wprowadź operację (+ , - , * , /) (zad.5)');\n\n        let jsx;\n        if (operation === '+') {\n            jsx = <h1>{num1} + {num2} = {num1 + num2}</h1>\n        } else if (operation === '-') {\n            jsx = <h2>{num1} - {num2} = {num1 - num2}</h2>\n        } else if (operation === '*') {\n            jsx = <h3>{num1} * {num2} = {num1 * num2}</h3>\n        } else if (operation === '/') {\n            jsx = <h4>{num1} / {num2} = {num1 / num2}</h4>\n        }\n        return jsx;\n    }\n}\n\nexport default Task05;","export default [\"cat\", \"dog\", \"fox\", \"fish\", \"parrot\"];\n","import React, {Component} from \"react\";\nimport animals from \"./animals\";\n\nclass Task06 extends Component{\n\n    render() {\n        return (\n            <ul>\n                {animals.length}\n                {animals.map((el,ind) => <li key={ind}> {el} </li> )}\n            </ul>\n        )\n    }\n}\n\nexport default Task06;","import React, {Component} from \"react\";\n\n\nclass Task07 extends Component {\n\n    render() {\n\n        function genNumber() {\n            return Math.round(Math.random() * 9 + 1)\n        }\n\n        let num1 = genNumber();\n        let num2 = genNumber();\n\n        let result = parseFloat(prompt(`Podaj sumę liczby ${num1} oraz ${num2} do zadania 7`));\n\n        let jsx;\n        if (num1 + num2 === result) {\n            jsx = <div style={{background: 'green'}}>Poprawna odpowiedź</div>;\n        } else {\n            jsx = <div style={{background: 'red'}}>Odpowiedź błędna</div>;\n        }\n\n        return jsx;\n    }\n}\n\nexport default Task07;","import React, {Component} from \"react\";\n\nclass Task08 extends Component {\n    render() {\n\n        let color = prompt('Podaj dowolny z wymienionych kolorów - red, green lub blue');\n        let jsx;\n\n        if (['red', 'green', 'blue'].indexOf(color.toLowerCase()) === -1\n        ) {\n            jsx = <div>Nieprawidłowy kolor</div>\n        } else {\n            let style = {\n                width: '100px',\n                height: '100px',\n                border: `5px solid ${color}`\n            };\n            jsx = <div style={style}/>;\n        }\n        return jsx;\n    }\n}\n\nexport default Task08;","import React, {Component} from \"react\";\nimport person from \"./person\";\n\nclass Task10 extends Component{\n\n    render() {\n        let personJsx = <>\n            <h1>{person.name} {person.surname}</h1>\n            <span>lat {person.age}</span>\n        </>;\nreturn personJsx;\n    }\n}\n\nexport default Task10;","export default [\n    {\n        id: 1,\n        title: \"Mrs.\",\n        name: \"Sonya\",\n        surname: \"Smith\",\n        pesel: 66111626126,\n        bio:\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce fringilla, diam non tempus vulputate, tellus massa viverra diam, eget scelerisque ipsum ipsum vel sem.\",\n        avatar: \"https://image.flaticon.com/icons/svg/145/145852.svg\"\n    },\n    {\n        id: 2,\n        title: \"Mr.\",\n        name: \"Charles\",\n        surname: \"Willard\",\n        pesel: 53052334461,\n        bio:\n            \"Nullam in dignissim nibh. Sed lorem arcu, consectetur vel posuere quis, cursus sit amet massa. In eleifend ut urna in sodales. Vestibulum viverra lectus in efficitur ultricies.\",\n        avatar: \"https://image.flaticon.com/icons/svg/145/145867.svg\"\n    },\n    {\n        id: 3,\n        title: \"Ms.\",\n        name: \"Tina\",\n        surname: \"Robinson\",\n        pesel: 67032584953,\n        bio:\n            \"Phasellus euismod leo non lacus congue dapibus. Curabitur iaculis faucibus euismod. Vestibulum sem metus, congue at lacinia eget, suscipit at nunc.\",\n        avatar: \"https://image.flaticon.com/icons/svg/145/145862.svg\"\n    }\n];\n","import React, {Component} from \"react\";\nimport people from \"./people\";\n\nclass Task11 extends Component {\n    render() {\n        let peopleJsx = people.map(p =>\n            <div key={p.title}>\n                    <h1>{p.title}  {p.name}  {p.surname}</h1>\n                    <p>{p.bio}</p>\n            </div>\n        );\n        return peopleJsx;\n    }\n}\n\nexport default Task11;","import React, {Component} from 'react';\nimport Task01 from \"./task01\";\nimport Task02 from \"./task02\";\nimport Task03 from \"./task03\";\nimport Task04 from \"./task04\";\nimport Task05 from \"./task05\";\nimport Task06 from \"./task06\";\nimport Task07 from \"./task07\";\nimport Task08 from \"./task08\";\n// import Task09 from \"./task09\";\nimport Task10 from \"./task10\";\nimport Task11 from \"./task11\";\n\n\nclass Home extends Component {\n\n    render() {\n        return (\n            <>\n            <Task01/>\n            <Task02/>\n            <Task03/>\n            <Task04/>\n            <Task05/>\n            <Task06/>\n            <Task07/>\n            <Task08/>\n            {/*<Task09/>*/}\n            <Task10/>\n            <Task11/>\n            </>\n        )\n    }\n}\n\nexport default Home;\n\n","import React from 'react';\nimport './App.css';\nimport {\n    HashRouter,\n    Route,\n} from 'react-router-dom';\n\n\nimport Home from \"./components/home\";\n\nfunction App() {\n    return (\n        <HashRouter>\n                <Route exact path='/' component={Home}/>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}